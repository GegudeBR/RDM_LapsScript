<?xml version="1.0"?>
<ArrayOfConnection>
  <Connection>
    <Credentials>
      <CredentialType>Custom</CredentialType>
      <CustomScript>

$ComputerName = "$PARAMETER1$"
$Result.Username = "Administrator"
$Result.Domain = "."
$Result.Password = "" 

$ComputerName | Out-File -FilePath C:\temp\LAPS\in.laps
if (!(Test-Path "C:\temp\LAPS\out.laps"))
{
  Set-Content -Path "C:\temp\LAPS\out.laps"
}

$FileWatcher = New-Object System.IO.FileSystemWatcher
$FileWatcher.Path = "C:\temp\LAPS"
$FileWatcher.Filter = "out.laps"
$FileWatcher.EnableRaisingEvents = $true

$Action = {
  $FileWatcher.EnableRaisingEvents = $false
	$Path = $Event.SourceEventArgs.FullPath
  Start-Sleep -Milliseconds 100
	$Result.Password = Get-Content $Path
  $FileWatcher.EnableRaisingEvents = $true
  }  

$Changed = Register-ObjectEvent $FileWatcher "Changed" -Action $Action


# 30 * 100ms = 30000ms = 30 seconds timeout
for($i=0; $i -le 30; $i++)
{
  if ($Result.Password -ne "")
  {
    break
  }
  Start-Sleep -Milliseconds 100
}

if($Result.Password -eq "") {
  $Result.Cancel=$True
  $Result.ErrorMessage="LAPS server timed out!"
}


</CustomScript>
      <CustomScriptParameter1>$HOST$</CustomScriptParameter1>
    </Credentials>
    <ConnectionType>Credential</ConnectionType>
    <ID>5e9b66e4-1e74-44b9-85aa-a2bbdd61adad</ID>
    <Name>LAPS</Name>
    <OpenEmbedded>true</OpenEmbedded>
    <Stamp>e937ea6a-84e7-4023-84a5-686634320392</Stamp>
  </Connection>
</ArrayOfConnection>